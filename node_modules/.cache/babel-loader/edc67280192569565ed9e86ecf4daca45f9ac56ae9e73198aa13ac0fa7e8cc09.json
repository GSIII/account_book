{"ast":null,"code":"var _jsxFileName = \"/Users/galseoin/Desktop/practice/my-pocket/src/components/UI/Modal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport \"./Modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst User = {\n  name: \"sesac\",\n  pw: \"sesac\"\n};\nexport default function Modal(_ref) {\n  _s();\n  let {\n    onClose\n  } = _ref;\n  const handleClose = () => {\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n  };\n  const [name, setName] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const handleEmail = e => {\n    setName(e.target.value);\n  };\n  const handlePw = e => {\n    setPw(e.target.value);\n  };\n  const onClickConfirmButton = () => {\n    if (name === User.name && pw === User.pw) {\n      alert(`${name}님 반갑습니다.`);\n      handleClose();\n    } else {\n      alert(\"등록되지 않은 회원입니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Overlay, {\n      children: /*#__PURE__*/_jsxDEV(ModalWrap, {\n        children: /*#__PURE__*/_jsxDEV(Contents, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\uC774\\uB984 : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"text\",\n              placeholder: \"\\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n              value: name,\n              onChange: handleEmail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pw\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\uBE44\\uBC00\\uBC88\\uD638 : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input\",\n              type: \"password\",\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n              value: pw,\n              onChange: handlePw\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onClickConfirmButton,\n            className: \"bottomButton\",\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"\\uB2EB\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Modal, \"YuDB9cGm0ZMCKeN5TyNXKvPk9Ss=\");\n_c = Modal;\nconst Overlay = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.2);\n  z-index: 9999;\n`;\n_c2 = Overlay;\nconst ModalWrap = styled.div`\n  width: 400px;\n  height: fit-content;\n  border-radius: 15px;\n  background-color: #fff;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n_c3 = ModalWrap;\nconst Contents = styled.div`\n  margin: 50px 30px;\n`;\n_c4 = Contents;\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  font-size: 15px;\n  padding: 10px 20px;\n  border: none;\n  background-color: #ababab;\n  border-radius: 10px;\n  color: white;\n  font-style: italic;\n  font-weight: 200;\n  cursor: pointer;\n  /* &:hover {\n    background-color: #898989;\n  } */\n`;\n_c5 = Button;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"Overlay\");\n$RefreshReg$(_c3, \"ModalWrap\");\n$RefreshReg$(_c4, \"Contents\");\n$RefreshReg$(_c5, \"Button\");","map":{"version":3,"names":["React","useState","styled","User","name","pw","Modal","onClose","handleClose","setName","setPw","handleEmail","e","target","value","handlePw","onClickConfirmButton","alert","Overlay","div","ModalWrap","Contents","Button","button"],"sources":["/Users/galseoin/Desktop/practice/my-pocket/src/components/UI/Modal.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport \"./Modal.css\";\n\nconst User = {\n  name: \"sesac\",\n  pw: \"sesac\",\n};\nexport default function Modal({ onClose }) {\n  const handleClose = () => {\n    onClose?.();\n  };\n  const [name, setName] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n\n  const handleEmail = (e) => {\n    setName(e.target.value);\n  };\n  const handlePw = (e) => {\n    setPw(e.target.value);\n  };\n\n  const onClickConfirmButton = () => {\n    if (name === User.name && pw === User.pw) {\n      alert(`${name}님 반갑습니다.`);\n      handleClose();\n    } else {\n      alert(\"등록되지 않은 회원입니다.\");\n    }\n  };\n\n  return (\n    <>\n      <Overlay>\n        <ModalWrap>\n          <Contents>\n            <div className=\"name\">\n              <label>이름 : </label>\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"이름을 입력하세요\"\n                value={name}\n                onChange={handleEmail}\n              />\n            </div>\n\n            <div className=\"pw\">\n              <label>비밀번호 : </label>\n              <input\n                className=\"input\"\n                type=\"password\"\n                placeholder=\"비밀번호를 입력하세요\"\n                value={pw}\n                onChange={handlePw}\n              />\n            </div>\n\n            <button onClick={onClickConfirmButton} className=\"bottomButton\">\n              로그인\n            </button>\n            <Button onClick={handleClose}>닫기</Button>\n          </Contents>\n        </ModalWrap>\n      </Overlay>\n    </>\n  );\n}\n\nconst Overlay = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background: rgba(0, 0, 0, 0.2);\n  z-index: 9999;\n`;\n\nconst ModalWrap = styled.div`\n  width: 400px;\n  height: fit-content;\n  border-radius: 15px;\n  background-color: #fff;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst Contents = styled.div`\n  margin: 50px 30px;\n`;\n\nconst Button = styled.button`\n  display: flex;\n  justify-content: center;\n  font-size: 15px;\n  padding: 10px 20px;\n  border: none;\n  background-color: #ababab;\n  border-radius: 10px;\n  color: white;\n  font-style: italic;\n  font-weight: 200;\n  cursor: pointer;\n  /* &:hover {\n    background-color: #898989;\n  } */\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}